/* eslint-disable react-hooks/exhaustive-deps */
import React, { useCallback, useEffect, useRef, useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useDispatch, useSelector } from 'react-redux';
import { AppDispatch, RootState } from '../../redux/store';
import CustomClass from '../../utils/CustomClass';
import Swal from "sweetalert2";

import logo from '../../assets/logo-rojo-tu.png';
import { decryptData, encryptData } from '../../utils/Decrypt';
// import SelectIdentity from '../SelectIdentity';
import MyProfile from '../../pages/MyProfile';
import { getApuUrl } from '../../utils/config';
import { logout, updateUserInfo } from '../../features/auth/authSlice';

const component: string = "header"
const version: string = "0"

const Header: React.FC = () => {

    const { nombre, administrador, primer_ingreso, user } = useSelector((state: RootState) => state.auth);
    const [showProfile, setShowProfile] = useState(false);
    const dispatch = useDispatch<AppDispatch>();
    const navigate = useNavigate();
    const hasRun = useRef(false);

    const userName = decryptData(nombre).data;

    const handleRecoverPassword = useCallback(
        async () => {
            var myHeaders = new Headers();
            myHeaders.append("Content-Type", "application/json");

            var raw = JSON.stringify({
                "usuario": user
            });

            var requestOptions = {
                method: 'POST',
                headers: myHeaders,
                body: raw,
            };

            let requestCode;

            try {

                const url = getApuUrl("/solicitarCodigo");

                requestCode = await fetch(url, requestOptions);
                requestCode = await requestCode.json();

            } catch (error) {
                return Swal.fire({ title: 'Error al solicitar el codigo', text: 'Ha ocurrido un error al solicitar el codigo para restablecer la contraseña', icon: 'info', confirmButtonColor: "#E31A2A" });
            }

            if (requestCode.code === 200) {

                handleShowProfile();


            } else {
                return Swal.fire({ title: 'Error al solicitar el codigo', text: requestCode.message, icon: 'info', confirmButtonColor: "#E31A2A" });
            }
        },
        [primer_ingreso],
    )

    const handleShowProfile = async () => {
        const { value: codigo } = await Swal.fire({
            title: `Se ha enviado el correo`,
            input: 'text',
            inputLabel: 'Código de verificación',
            inputPlaceholder: '12345',
            html: `<p>Se ha enviado un email a tu correo para restablecer la contraseña</p><span><strong>${decryptData(user).data}</strong></span>`,
            confirmButtonColor: "#E31A2A"
        });

        if (codigo) {
            const { value: contrasena } = await Swal.fire({
                title: `Nueva contraseña`,
                input: 'text',
                inputLabel: 'Contraseña nueva',
                inputPlaceholder: '12345',
                confirmButtonColor: "#E31A2A"
            });

            if (contrasena) {
                var myHeaders1 = new Headers();
                myHeaders1.append("Content-Type", "application/json");

                var raw1 = JSON.stringify({
                    "usuario": user,
                    "codigo": codigo,
                    "nueva_contrasena": encryptData(contrasena).data
                });

                var requestOptions1 = {
                    method: 'POST',
                    headers: myHeaders1,
                    body: raw1
                };

                try {
                    const url = getApuUrl("/cambiarContrasena");

                    let requestChangePassword: any = await fetch(url, requestOptions1);
                    requestChangePassword = await requestChangePassword.json();

                    if (requestChangePassword.code === 200) {

                        dispatch(updateUserInfo({ primer_ingreso: false }))

                        return Swal.fire({ title: 'Se ha cambiado la contraseña', text: "Tu contraseña ha sido actualizada correctamente, puedes seguir navegando", icon: 'success', confirmButtonColor: "#E31A2A" });
                    } else if (requestChangePassword.code === 401) {
                        return Swal.fire({ title: 'Código inválido', text: requestChangePassword.message, icon: 'info', confirmButtonColor: "#E31A2A" });
                    }
                } catch (error) {
                    return Swal.fire({ title: 'Error al intentar cambiar la contraseña', text: 'Ha ocurrido un error al intentar cambiar la contraseña', icon: 'info', confirmButtonColor: "#E31A2A" });
                }
            }
        } else {
            Swal.fire({ title: 'Obligatorio', text: 'No has cambiado tu contraseña', icon: 'info', confirmButtonColor: "#E31A2A" });
            dispatch(logout())
            navigate("/login");
        }
    };


    const hanldeHref = () => {
        window.open("https://rojotu.davivienda.com/preguntas-frecuentes", "_blank");
    }

    useEffect(() => {
        if (primer_ingreso && !hasRun.current) {
            handleRecoverPassword();
            hasRun.current = true;
        }
    }, [primer_ingreso]);


    return (
        <header className={`${CustomClass({ component, version, customClass: "header" })}`}>
            <div className={`${CustomClass({ component, version, customClass: "container" })}`}>
                <div className={`${CustomClass({ component, version, customClass: "box" })} ${CustomClass({ component, version, customClass: "box-1" })}`}>
                    <div className={`${CustomClass({ component, version, customClass: "left-navigation-container" })}`}>
                        <div className={`${CustomClass({ component, version, customClass: "box-logo" })}`}>
                            <img className={`${CustomClass({ component, version, customClass: "image-logo" })}`} src={logo} alt="Logo Rojo tú" />
                        </div>
                    </div>
                    <div className={`${CustomClass({ component, version, customClass: "center-navigation-container" })}`}>
                        <div className={`${CustomClass({ component, version, customClass: "box-nav" })}`}>
                            <nav className={`${CustomClass({ component, version, customClass: "nav" })}`}>
                                <Link className={`${CustomClass({ component, version, customClass: "nav-link" })} ${CustomClass({ component, version, customClass: "nav-link-1" })}`} to="/">
                                    <svg width="64" height="64" viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg">
                                        <path fillRule="evenodd" clipRule="evenodd" d="M24.1345 54.5065C24.297 54.516 24.4495 54.547 24.603 54.588C25.511 54.8945 26.6945 55.129 27.8885 55.3015C29.418 55.516 30.958 55.619 31.9785 55.619C32.989 55.619 34.529 55.516 36.0595 55.3015C37.2525 55.129 38.4365 54.8945 39.3445 54.588H39.354C39.4975 54.547 39.6505 54.5065 39.823 54.5065C39.976 54.4955 40.1295 54.5065 40.293 54.547C43.8425 55.353 46.9745 55.1385 49.5455 54.3125C52.473 53.3735 54.656 51.6195 55.8395 49.6705C56.7265 48.222 57.084 46.671 56.931 45.142C56.758 43.581 56.054 42.0095 54.82 40.53L54.7585 40.459C53.432 38.6745 52.5445 36.96 51.963 35.42C51.1165 33.195 50.9015 31.329 50.871 30.166C50.871 29.9215 50.912 29.687 51.004 29.462C51.0955 29.2375 51.2285 29.0335 51.4015 28.8605L51.4125 28.85C51.585 28.6865 51.7895 28.554 52.014 28.473C52.249 28.391 52.4935 28.3495 52.7385 28.3605L54.6055 28.462C56.1045 28.5335 57.451 28.3495 58.4815 27.9725C59.329 27.657 59.9 27.2385 60.094 26.769C60.246 26.3715 60.1445 25.8505 59.8185 25.2395C59.379 24.4225 58.583 23.5045 57.441 22.546C56.737 21.9535 55.86 21.2605 55.003 20.597C53.2795 19.261 51.617 18.037 51.5955 18.026L51.585 18.016C51.3405 17.843 51.1475 17.608 51.0245 17.3425L51.014 17.3325C50.9015 17.0685 50.851 16.771 50.871 16.476C50.9225 15.7105 51.0245 14.8645 51.1575 14.028C51.2895 13.171 51.453 12.3545 51.6365 11.62C51.81 10.9465 51.994 10.3345 52.044 10.1205C51.8815 10.09 51.6565 10.0695 51.3715 10.0695H46.638C46.454 10.0695 46.312 10.0795 46.2095 10.11C46.2095 10.2325 46.24 10.3655 46.271 10.4675C46.3315 10.6915 46.393 10.937 46.465 11.151C46.5465 11.477 46.515 11.824 46.4035 12.1505C46.301 12.467 46.097 12.7425 45.822 12.9565H45.812C45.526 13.1805 45.1995 13.293 44.8735 13.3135C44.537 13.344 44.19 13.2625 43.8835 13.0895C41.231 11.5895 38.7625 10.386 36.6615 9.56999C34.6515 8.77449 33.0295 8.34549 31.9685 8.33499C30.9175 8.34549 29.296 8.77449 27.2855 9.56999C25.185 10.386 22.7155 11.5895 20.0635 13.0895C19.5735 13.3645 17.5035 14.5885 15.4935 15.8635C14.331 16.618 13.1885 17.3835 12.403 17.996L12.3005 18.067C11.801 18.4345 8.38349 20.924 6.51599 22.484C5.37399 23.4535 4.57849 24.3715 4.13899 25.1875C3.80299 25.8205 3.71049 26.3405 3.86399 26.7385C4.05749 27.228 4.63949 27.657 5.47549 27.9725C6.49549 28.3495 7.83249 28.5335 9.34249 28.462L11.219 28.3605C11.454 28.3495 11.698 28.391 11.9225 28.462L11.9335 28.473C12.1575 28.554 12.3615 28.6865 12.535 28.85L12.5455 28.8605C12.718 29.024 12.851 29.2275 12.9435 29.462C13.035 29.676 13.076 29.9215 13.076 30.166C13.045 31.339 12.831 33.195 11.984 35.42C11.4025 36.96 10.515 38.6745 9.18949 40.459L9.12749 40.53C7.89399 42.0095 7.18999 43.581 7.01599 45.131C6.85249 46.671 7.21999 48.222 8.10749 49.681C9.29149 51.6195 11.474 53.3735 14.4015 54.3125C16.9725 55.1385 20.104 55.353 23.6545 54.547C23.828 54.5065 23.9605 54.5065 24.1345 54.5065ZM52.065 10.0385C52.055 10.0185 52.044 10.0185 52.065 10.0385ZM31.9785 59.138C30.928 59.138 29.224 59.0355 27.47 58.791C26.266 58.6275 25.042 58.393 23.9705 58.0765C19.88 58.9235 16.2285 58.618 13.1885 57.6075C9.47449 56.3835 6.66899 54.0775 5.10899 51.5065C3.81299 49.406 3.30299 47.1 3.53799 44.805C3.77299 42.561 4.72149 40.337 6.37349 38.327C7.41399 36.9495 8.11799 35.634 8.58749 34.4505C8.95449 33.5425 9.18949 32.706 9.33199 31.9815C7.30249 32.0635 5.45499 31.768 3.99699 31.1655C2.34449 30.482 1.12999 29.411 0.589487 28.0235C0.222487 27.096 0.0784875 25.8615 0.640487 24.382C1.13999 23.066 2.21099 21.526 4.25149 19.8015C5.01699 19.159 5.92449 18.445 6.79149 17.782C8.41399 16.538 10.046 15.354 10.2705 15.1905C11.148 14.517 12.3615 13.701 13.586 12.9155C15.698 11.5695 17.8295 10.3145 18.3295 10.0295C21.1555 8.42749 23.8175 7.14199 26.1125 6.25399C28.4905 5.33649 30.5095 4.82599 31.9685 4.82599C33.3455 4.82599 35.2125 5.27449 37.4055 6.09149C39.0895 6.71349 40.9765 7.56999 42.986 8.60049C43.088 8.36599 43.211 8.15149 43.3635 7.94799C43.741 7.45749 44.2305 7.09099 44.8115 6.85599C45.342 6.65249 45.9545 6.54949 46.638 6.54949H51.3715C52.126 6.54949 52.7685 6.63149 53.31 6.81499C53.963 7.03999 54.4615 7.38599 54.84 7.87649C55.8695 9.20199 55.5035 10.6915 55.0745 12.4155L55.054 12.477C54.901 13.11 54.7585 13.773 54.646 14.4355C54.574 14.8735 54.5135 15.324 54.4615 15.782C55.156 16.2925 56.2065 17.088 57.2675 17.904C58.145 18.5875 59.0225 19.2815 59.706 19.8525C61.4505 21.332 62.491 22.6685 63.0625 23.8315C63.909 25.5755 63.786 27.004 63.3675 28.044C62.8275 29.4315 61.6135 30.5025 59.9505 31.1765C58.492 31.768 56.655 32.0635 54.615 31.9815C54.727 32.533 54.8905 33.1545 55.125 33.8285C55.5845 35.155 56.3395 36.6745 57.533 38.2865C59.2165 40.2965 60.175 42.5405 60.41 44.805C60.6445 47.1 60.1335 49.406 58.8485 51.5065C57.5945 53.5575 55.574 55.425 52.9425 56.7205C50.627 57.8625 47.832 58.5765 44.669 58.5765C43.8735 58.5765 43.0475 58.526 42.1905 58.4335C41.4555 58.3525 40.721 58.23 39.987 58.0765C38.9155 58.393 37.6815 58.6275 36.4775 58.791C34.7225 59.0355 33.019 59.138 31.9785 59.138Z" />
                                    </svg>
                                    <span className={`${CustomClass({ component, version, customClass: "span-icon" })} ${CustomClass({ component, version, customClass: "span-icon-1" })}`}>Inicio</span>
                                </Link>
                                <Link className={`${CustomClass({ component, version, customClass: "nav-link" })} ${CustomClass({ component, version, customClass: "nav-link-2" })}`} to="/collection">
                                    <svg width="64" height="64" viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg">
                                        <path fillRule="evenodd" clipRule="evenodd" d="M52.9568 33.6471C53.669 33.568 56.5047 33.6 57.4441 33.6238L57.429 36.0517C56.1216 36.0594 54.1472 36.1061 52.9646 36.0283L52.9568 33.6471ZM36.8443 33.6549C37.1895 33.568 50.3328 33.5374 51.2018 33.6315L51.179 36.0594L36.8443 36.0361V33.6549ZM30.5943 33.6078L35.0747 33.6471L35.0825 33.9995V35.5589L35.067 36.0594L30.5943 36.0439V33.6078ZM5.232 31.3755C5.82765 30.9989 6.39131 30.3182 6.9632 29.9497C7.1904 30.3099 7.11177 30.843 7.2448 31.2818C7.51131 32.1742 8.95223 32.1115 8.96 30.9605C8.96 30.5134 8.77257 30.0434 8.78034 29.6521C9.25028 30.0279 10.4882 31.1717 10.8485 31.3755L10.8407 41.3774H5.22468L5.232 31.3755ZM30.7191 11.8953C26.6784 11.7463 23.4903 9.06743 23.067 5.04183H38.3959C38.1216 8.69166 34.6043 12.0443 30.7191 11.8953ZM16.4329 6.49874C17.7568 5.15931 18.8535 4.97874 21.2969 5.05737C21.4222 6.3264 21.7979 7.60366 22.315 8.55086C22.597 9.05966 22.8398 9.5296 23.232 9.93691C23.6155 10.3525 23.8898 10.7205 24.2656 11.1278C24.837 11.7312 26.208 12.5303 27.0386 12.8818C28.1582 13.3522 29.4272 13.6347 30.7191 13.6658C33.0459 13.712 35.7321 12.5847 37.2201 11.0967C38.795 9.5296 39.7509 8.01874 40.1815 5.06514C42.5157 4.87726 43.8075 5.27726 45.0304 6.47543L52.9417 14.3785C53.4583 14.8873 54.0297 15.4199 54.4992 15.9611C54.3589 16.2811 51.8912 18.6318 51.4455 19.0853C50.928 19.6187 50.4503 20.0887 49.9255 20.6135C49.589 20.9422 48.704 21.9136 48.3904 22.0937C47.4034 21.4359 46.3611 20.6135 45.3664 19.8775C44.8654 19.5013 44.2853 18.8037 43.5735 19.1566C42.9307 19.477 43.0953 20.4567 43.0953 21.3029C43.0953 24.8037 43.0555 28.3287 43.0953 31.8217C42.171 31.9397 33.1712 31.8455 31.9881 31.8455C28.7305 31.8455 28.8238 31.4775 28.8238 34.2263C28.8238 35.9104 28.949 38.1664 28.8082 39.7797H18.3909C18.1952 37.4533 18.4617 33.568 18.3758 30.9605C18.3511 30.3026 17.8981 29.8007 17.1771 30.0357C16.5426 30.2395 16.6053 30.9605 16.6053 31.6965C16.6053 34.6341 16.5193 37.6027 16.6053 40.5399C16.6286 41.3312 17.0121 41.5502 17.8034 41.5502C21.4615 41.5424 25.1662 41.4638 28.8238 41.5502C28.8869 47.8866 28.8315 54.2391 28.8238 60.576C28.8238 61.9936 28.8869 62.229 30.3515 62.2203H39.7819C40.8631 62.2203 41.9515 62.5029 42.1394 61.3906C42.4453 59.5963 43.7614 48.2235 44.0274 47.5342C44.208 48.0818 44.3717 49.9781 44.4658 50.6903L45.7504 60.325C45.9781 61.9465 45.7504 62.229 47.5049 62.2203C49.2439 62.2203 57.429 62.3141 58.4165 62.2126C59.0034 62.1499 59.1991 61.7975 59.2069 61.1785C59.2306 59.1662 59.301 48.9202 59.1438 48.5687C58.9728 48.176 58.3223 47.9259 57.8446 48.2007C57.4441 48.427 57.4761 49.0066 57.4528 49.5945C57.4057 50.7616 57.4528 52.0457 57.4528 53.2288C57.4528 55.6334 57.4683 58.0375 57.4441 60.4585L47.5758 60.427L45.3819 44.4251C45.2571 43.5003 45.1712 42.6075 45.0615 41.7143C44.9751 40.9856 45.0217 39.7797 44.0119 39.7874C43.0249 39.7874 43.0953 40.9312 42.9778 41.8011C42.8526 42.693 42.7351 43.5867 42.6181 44.4878C42.4297 45.8976 40.6752 59.7691 40.4635 60.4585L30.5943 60.4663L30.6171 37.8217L57.4135 37.8295C57.5461 38.4165 57.4761 41.8318 57.4761 42.6857C57.4683 43.712 56.9513 46.9001 58.6665 46.2734C59.3792 46.0151 59.2151 45.0747 59.2306 44.3931L59.2069 37.0469C59.2069 31.8295 59.8258 31.8455 57.0761 31.8455C55.1968 31.8455 45.5547 31.9474 44.8654 31.8139V21.7806C45.1397 21.8043 45.6018 22.2501 45.8519 22.4302C48.7973 24.6002 48.2103 24.9134 50.6848 22.3365C51.2174 21.7883 51.7737 21.2946 52.3616 20.6674C53.4263 19.5479 54.6565 18.357 55.7454 17.2923C57.4761 15.616 56.5993 15.6622 54.6642 13.6183C54.0695 12.992 53.5675 12.5458 52.949 11.9191L47.9515 6.89783C46.8005 5.73943 45.8683 4.50148 44.2779 3.81211C42.5472 3.06788 40.1815 3.28731 38.1445 3.28731C33.6416 3.28731 29.1369 3.28731 24.6336 3.28731C22.9102 3.28731 19.5899 3.1072 18.1175 3.49943C16.1669 4.016 15.1872 5.1904 14.1609 6.22446L5.73394 14.6528C5.24754 15.1461 4.24594 15.8199 5.1456 16.7438C5.66263 17.2768 8.27885 19.6887 8.45897 20.1198C7.89577 20.6057 7.57394 20.7854 7.15931 21.4281C6.39131 22.6254 6.23451 24.1925 6.29805 25.6105C6.42194 28.4224 7.15931 27.3106 5.59223 28.7666C5.0208 29.3074 4.27657 29.8171 3.728 30.3886C3.36777 30.7717 3.46971 31.2421 3.46971 31.8455C3.46971 34.1477 3.46971 36.4507 3.46971 38.7538C3.46971 43.8377 3.09348 42.9915 5.99954 43.1552C7.0176 43.211 8.44343 43.1323 9.49303 43.1168C10.448 43.109 11.9913 43.4373 12.4695 42.7008C12.7671 42.2309 12.6103 40.0773 12.6103 39.349V32.4407C12.6103 30.5998 12.8375 30.8274 11.7563 29.8793C11.1145 29.3152 10.5426 28.8215 9.89211 28.2501C9.59497 27.9918 9.25851 27.7253 8.96777 27.4665C8.49783 27.0363 8.224 27.1067 8.15405 26.5742C7.84777 24.2866 8.09874 22.2501 9.7824 21.4359C10.6286 21.8738 12.0704 24.2478 13.0331 24.1691C13.8478 24.0992 15.6969 22.0937 16.5975 21.7563C16.6441 22.8064 16.6053 23.9579 16.6053 25.0153C16.6053 25.7513 16.4178 27.5529 16.8475 27.9758C17.1694 28.2967 18.3835 28.6967 18.3758 26.8009V20.3397C18.3835 19.1013 17.6626 18.7017 16.7616 19.3755C16.245 19.7678 13.5968 21.8505 13.0569 22.0777C12.352 21.5305 10.6286 19.6809 9.98628 19.0313C9.49303 18.5298 7.19771 16.4233 6.97097 15.9611L16.4329 6.49874Z" />
                                    </svg>
                                    <span className={`${CustomClass({ component, version, customClass: "span-icon" })} ${CustomClass({ component, version, customClass: "span-icon-2" })}`}>Colección</span>
                                </Link>
                                <Link className={`${CustomClass({ component, version, customClass: "nav-link" })} ${CustomClass({ component, version, customClass: "nav-link-3" })}`} to="/size-guide">
                                    <svg width="64" height="64" viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg">
                                        <path fillRule="evenodd" clipRule="evenodd" d="M23.7676 38.32V31.2634C23.7676 28.0898 24.5416 25.9548 26.2316 24.2712C29.9663 20.5494 35.5781 21.4589 38.0937 24.4777C39.5773 26.2579 40.2803 27.9286 40.2803 31.1408V38.32C40.2803 40.8227 38.5452 39.81 37.7325 40.7969C36.8294 41.887 37.9518 52.7042 37.2874 55.5552C36.3199 55.7809 35.1846 55.6713 34.1784 55.6713C33.3721 55.6713 33.443 55.2714 33.4559 54.478L33.4624 44.5445C33.4817 41.2871 31.2241 41.9644 30.7855 42.9513C30.4049 43.8092 30.5662 52.5816 30.592 54.3619C30.6113 55.9422 30.7791 55.6713 27.3604 55.6713C27.0314 55.6713 27.025 55.6132 26.7605 55.5552C26.1155 52.8009 27.1733 41.9515 26.3735 40.8614C25.5608 39.7649 23.7676 40.8808 23.7676 38.32ZM26.638 13.6734C26.638 8.11326 34.4106 6.08787 36.8939 11.4352C37.6809 13.138 37.4874 15.3118 36.4682 16.6793C35.8619 17.5049 35.2814 18.0596 34.2622 18.5434C32.9206 19.1691 31.2112 19.1755 29.8696 18.5756C28.8117 18.1048 28.3021 17.6016 27.6313 16.7502C27.083 16.0536 26.638 14.6152 26.638 13.6734ZM23.8901 13.4283C23.8901 15.8472 24.5287 17.421 25.9478 19.0272L27.1153 20.2527C25.7736 20.6139 23.587 22.8909 22.7613 24.1487C21.639 25.8645 21.0133 27.9995 21.0133 30.7796V38.5586C21.0133 39.5842 21.3616 40.6098 21.8002 41.2484C22.2518 41.9064 23.0387 42.5514 23.8901 42.7513L23.8837 54.478C23.8772 56.6453 24.8383 58.4256 27.1153 58.4256H36.9326C39.0548 58.4256 40.1771 56.7807 40.1642 54.5941V42.7513C41.9252 42.3385 43.0346 40.4615 43.0346 38.5586V30.7796C43.0346 26.574 41.8349 24.4067 39.416 21.9556C38.9645 21.5041 37.5519 20.4204 36.9326 20.2527C37.2229 19.8205 38.3001 19.1368 39.1257 17.6597C42.2864 11.977 37.7841 5.53314 32.5013 5.53314C29.8244 5.53314 27.9022 6.20397 26.1864 7.952C25.0705 9.0937 23.8901 11.203 23.8901 13.4283Z" />
                                        <path fillRule="evenodd" clipRule="evenodd" d="M12.757 38.9198V48.1373H10.8412V40.2357C10.8412 38.7844 9.40926 38.2813 8.54492 39.0166C8.40301 39.1327 8.0934 39.5455 8.0934 39.7584V48.1373C5.55843 48.1373 6.0551 48.6791 6.0551 45.1444L6.03575 38.3458C5.77129 37.0622 4.13937 37.6362 4.13937 36.7654V30.6635C4.13937 28.8574 4.9134 27.6641 5.84224 26.7417C7.95149 24.6582 11.783 24.9098 13.5826 27.3287C15.2468 29.5669 14.7953 32.8501 14.7953 36.2881C14.7953 37.4814 14.4276 37.1718 13.6794 37.4492C13.1246 37.6556 12.757 38.1845 12.757 38.9198ZM12.757 18.9368C12.757 20.1237 12.557 20.7881 11.712 21.6008C10.1704 23.0844 7.82894 22.6006 6.88719 21.3363C5.74549 19.7947 5.94545 18.0338 7.042 16.9243C7.45482 16.5051 7.84829 16.2019 8.52557 16.0148C9.2609 15.8149 9.91883 15.8342 10.5961 16.0729C11.7765 16.4922 12.757 17.8209 12.757 18.9368ZM3.30728 19.0529C3.30728 21.8782 4.55864 22.6135 5.21657 23.6004C4.84245 24.168 3.93296 24.3486 2.6816 26.2128C2.06237 27.1223 1.39154 28.7026 1.39154 30.1861V36.888C1.39154 38.1716 2.33973 39.5004 3.30728 39.7584C3.30728 42.074 3.30728 44.3832 3.30728 46.6989C3.30728 47.9825 3.24923 48.8791 3.8104 49.6596C4.24257 50.2724 5.06821 50.8851 6.0551 50.8851H12.6409C13.7245 50.8851 14.4921 50.4014 15.0017 49.7757C15.6531 48.9823 15.5112 48.1696 15.5112 46.815C15.5112 44.4671 15.5112 42.1127 15.5112 39.7584C16.6336 39.4939 17.5431 38.0555 17.5431 36.6493C17.5431 33.2307 17.9752 29.1025 16.4207 26.5224C15.7757 25.4581 14.6727 24.2906 13.5955 23.7229C14.6275 22.1813 15.5112 22.1491 15.5112 18.6982C15.5112 17.3952 14.5114 15.473 13.5955 14.7441C10.867 12.5575 7.74508 12.3833 5.18431 14.8344C4.71989 15.2795 4.24902 15.9632 3.93941 16.576C3.64914 17.1565 3.30728 18.2466 3.30728 19.0529Z" />
                                        <path fillRule="evenodd" clipRule="evenodd" d="M49.2592 36.2882C49.2592 32.8502 48.8077 29.567 50.4654 27.3287C52.2715 24.9099 56.0965 24.6647 58.2057 26.7417C59.1346 27.6641 59.9086 28.8574 59.9086 30.6635V36.7655C59.9086 37.6879 58.3928 37.0364 58.038 38.2491L57.9929 46.699C57.9993 48.3696 58.3541 48.1374 55.9546 48.1374V39.7584C55.9546 38.5974 53.2068 37.9524 53.2068 40.2358V48.1374H51.291V38.9199C51.291 38.1975 50.9427 37.7072 50.4525 37.4815C49.7365 37.159 49.2592 37.5653 49.2592 36.2882ZM54.7613 22.5232C53.3487 22.5232 52.1038 21.7299 51.6458 20.7365C50.7686 18.8272 51.5877 16.8083 53.368 16.1052C56.9479 14.699 59.6635 19.5884 56.5932 21.846C56.1739 22.1556 55.4321 22.5232 54.7613 22.5232ZM48.5368 18.6982C48.5368 22.1169 49.3946 22.1427 50.4525 23.723C49.3688 24.2971 48.3303 25.4065 47.6724 26.4515C46.0598 29.0316 46.5049 33.1985 46.5049 36.6494C46.5049 38.0556 47.4144 39.494 48.5368 39.7584C48.5368 42.0741 48.5368 44.3833 48.5368 46.699C48.5368 48.0213 48.3884 48.9114 48.9947 49.7112C49.4849 50.3627 50.3041 50.8852 51.4071 50.8852H57.9929C58.9798 50.8852 59.8054 50.2724 60.2376 49.6596C60.7988 48.8792 60.7472 47.9826 60.7472 46.699C60.7407 44.3833 60.7472 42.0741 60.7472 39.7584C61.7083 39.5004 62.6564 38.1717 62.6564 36.8881V29.9475C62.6564 28.1415 61.4438 26.0387 60.2376 24.826C59.6893 24.2777 59.0636 23.9552 58.8314 23.6004C59.0636 23.2586 59.3023 23.1102 59.5474 22.7684C61.8566 19.5497 60.6375 15.4021 57.2382 13.7057C55.6514 12.9188 53.9357 12.8736 52.3489 13.5315C50.3493 14.3443 48.5368 16.5309 48.5368 18.6982Z" />
                                    </svg>
                                    <span className={`${CustomClass({ component, version, customClass: "span-icon" })} ${CustomClass({ component, version, customClass: "span-icon-3" })}`}>Tallaje</span>
                                </Link>
                                <Link className={`${CustomClass({ component, version, customClass: "nav-link" })} ${CustomClass({ component, version, customClass: "nav-link-4" })}`} to="/clothes">
                                    <svg width="64" height="64" viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg">
                                        <path fillRule="evenodd" clipRule="evenodd" d="M21.5305 59.4885L41.836 59.505L41.8195 61.316L21.5055 61.2915L21.5305 59.4885ZM31.1575 16.1115L33.017 16.0465L32.9925 57.351H31.149L31.1575 16.1115ZM7.30248 54.6345L9.85648 54.6425L9.43198 56.0135L9.09698 56.0215H8.80398H7.27798L6.91048 56.0135L7.30248 54.6345ZM53.91 56.0215L53.5105 54.6345H56.04L56.4145 56.0215H53.91ZM43.1415 52.26C42.5865 52.309 40.0335 52.4155 39.772 52.138C39.5435 51.8935 39.6495 49.3075 39.6495 48.744C39.6495 46.5825 40.906 45.2035 43.1415 45.3425V52.26ZM20.225 45.334C21.922 45.2525 23.064 46.06 23.513 47.317C23.782 48.0505 23.7085 48.9485 23.7085 49.7645C23.7085 50.2045 23.7005 50.645 23.7085 51.0775C23.7085 51.583 23.7985 51.975 23.472 52.2115C23.1215 52.3995 20.772 52.309 20.2085 52.26L20.225 45.334ZM35.171 20.4595C36.1005 20.15 36.9655 19.84 37.7895 19.391C38.206 19.163 38.581 18.9345 38.956 18.6735C39.1605 18.5265 39.919 17.9225 40.0005 17.8985C40.2045 17.833 46.878 20.4845 47.9385 20.925C50.37 21.92 50.7855 21.9775 51.365 24.8495C52.0505 28.21 57.0345 52.0075 56.937 52.4725L51.944 52.456L50.5985 48.0505H53.535C55.7865 48.0505 55.1995 46.1665 54.302 45.9295C53.5925 45.75 50.875 45.922 49.913 45.8805L49.0805 43.0095H52.295C54.0165 43.0095 53.894 41.002 52.589 40.855C51.4465 40.725 49.6105 40.855 48.3795 40.8385C47.449 37.91 46.576 34.949 45.687 32.02C45.303 30.7555 45.279 31.057 45.6705 29.801L47.0005 25.371C47.253 24.539 47.3265 23.748 46.47 23.487C45.426 23.1765 45.156 24.0575 44.92 24.8165C44.7 25.5505 44.4875 26.252 44.267 27.003C44.047 27.7455 43.8105 28.4955 43.59 29.246C43.2885 30.2415 43.1415 30.47 43.1415 31.653C43.1415 32.485 43.207 42.609 43.1165 43.1555C41.0695 43.262 40.1065 43.572 38.9975 44.714C37.9855 45.7665 37.504 46.827 37.504 48.818C37.504 51.1185 37.129 53.3615 39.03 54.2025C40.0085 54.6425 41.9095 54.3655 43.133 54.455C43.1655 55.597 43.256 56.511 42.309 57.0985C41.73 57.4575 40.841 57.351 40.0985 57.351C38.499 57.351 36.77 57.4165 35.171 57.3435V20.4595ZM6.42148 52.448C6.32398 52.0485 11.39 27.6635 12.0995 24.302C12.3685 23.03 12.638 22.491 13.3805 21.871C14.0575 21.3005 20.0535 19.1055 21.375 18.5835C23.4805 17.735 23.154 17.7265 23.8965 18.298C24.598 18.8445 25.324 19.309 26.246 19.7335C27.3225 20.2315 28.775 20.566 29.0035 20.6965L28.987 57.3435C27.0285 57.3675 25.063 57.351 23.113 57.351C20.959 57.351 20.07 57.2455 20.225 54.455C22.118 54.3165 23.904 54.8795 25.1035 53.6715C26.156 52.603 25.846 50.6125 25.846 48.818C25.846 46.8025 25.357 45.7335 24.3205 44.6815C23.227 43.58 22.2485 43.2455 20.241 43.1555C20.143 42.5685 20.2085 32.5095 20.2085 31.653C20.2085 30.454 20.046 30.209 19.752 29.1895L18.43 24.8165C18.21 24.066 17.957 23.2335 16.9455 23.4705C16.048 23.6825 16.089 24.5145 16.35 25.371C16.5785 26.1055 16.79 26.8315 17.011 27.557C17.2395 28.308 17.4515 29.0505 17.688 29.801C18.071 31.057 18.0385 30.8045 17.6475 32.069C16.7495 35.014 15.8605 37.91 14.9715 40.8385C13.984 40.855 12.9885 40.847 12.0015 40.847C11.0555 40.847 10.084 40.7005 9.83148 41.606C9.68448 42.128 9.90548 42.5275 10.174 42.7645C10.737 43.2295 12.8905 42.9115 14.302 43.0255L13.437 45.8805C12.499 45.938 11.4305 45.889 10.476 45.889C9.48098 45.889 8.56698 45.7585 8.32198 46.6475C8.18348 47.1535 8.37098 47.5455 8.65698 47.798C8.98298 48.0835 9.30898 48.0505 9.82348 48.0505C10.7945 48.0505 11.773 48.0505 12.7765 48.059L11.414 52.4725L6.42148 52.448ZM35.179 15.5815C35.579 15.3695 36.566 15.1245 37.0475 14.92C37.6265 14.684 38.255 14.268 38.744 14.1125L38.7275 16.0955C38.1245 16.6665 36.2885 17.9635 35.1625 18.1595L35.179 15.5815ZM28.987 18.412C27.788 18.2 25.071 16.7645 24.6955 16.1685C24.5165 15.8755 24.606 14.553 24.6145 14.1125C25.716 14.48 26.8825 15.4345 29.0035 15.7285L28.987 18.412ZM25.6505 12.147C26.148 11.7225 27.5835 11.3395 28.3585 11.1515C30.994 10.531 33.9225 10.654 36.452 11.5755C36.7045 11.665 36.8675 11.7305 37.1365 11.837L37.586 12.049C37.6755 12.1055 37.6675 12.1055 37.708 12.147C36.7045 12.9545 33.368 13.982 31.679 13.9415C29.9985 13.909 26.613 12.995 25.6505 12.147ZM22.444 15.8015C22.216 15.989 20.3475 16.6665 19.923 16.8295L14.7995 18.8445C13.9515 19.171 12.997 19.489 12.303 19.9785C11.626 20.4515 11.031 21.088 10.631 21.871C9.98598 23.119 8.91748 29.0995 8.59148 30.698L4.30848 51.608C4.03098 52.954 4.46298 53.5575 5.16498 54.2185C5.04298 55.2135 3.96548 56.6415 5.34448 57.7755C5.89948 58.2405 6.45448 58.1835 7.27798 58.1835C10.8185 58.1835 10.925 58.5505 11.822 55.5805C12.2955 54.0145 12.0425 54.6835 12.7275 54.145C13.2095 53.762 13.388 53.394 13.625 52.644C14.7345 49.1195 15.8195 45.2035 16.9455 41.745L18.047 38.196C18.145 39.232 18.063 50.6045 18.063 52.6845C18.063 54.137 17.875 56.0295 18.4225 57.253C18.822 58.151 19.3195 58.3055 19.3765 58.6895C19.4585 59.1945 19.3845 60.5005 19.3845 61.088C19.3845 63.6 19.499 63.454 21.9465 63.454H41.3305C44.7405 63.454 43.762 63.4375 43.9655 58.82C43.9895 58.224 44.4225 58.3465 44.912 57.3105C45.4825 56.095 45.287 54.292 45.287 52.8315C45.287 50.8495 45.2135 39.1015 45.303 38.196L49.725 52.644C50.2795 54.4715 51.0055 54.1285 51.2425 54.626C51.7815 55.76 51.5935 58.0855 53.674 58.1835C54.424 58.216 55.248 58.1835 55.9985 58.1835C56.839 58.1835 57.451 58.2325 58.014 57.7755C59.344 56.6985 58.381 55.646 58.185 54.2185C58.715 53.5985 59.36 53.1825 59.058 51.665C58.862 50.6775 58.6585 49.683 58.446 48.6955L54.759 30.698C54.3585 28.7325 53.9515 26.742 53.5435 24.7675C52.703 20.664 51.9035 20.1665 48.656 18.8855C47.7265 18.51 41.208 16.0215 40.906 15.8015C40.841 14.7815 41.0445 12.5465 40.865 11.7465C40.743 11.2 40.2455 10.988 39.821 10.7515C39.4045 10.515 38.9485 10.2785 38.4665 10.0665C33.7675 7.93749 28.049 8.13249 23.594 10.7355C23.1455 10.988 22.656 11.1435 22.501 11.69C22.33 12.31 22.509 14.896 22.444 15.8015Z" />
                                        <path fillRule="evenodd" clipRule="evenodd" d="M45.426 0.644005C44.439 0.888505 44.2995 2.16101 45.14 2.62601C45.6295 2.90301 47.5385 2.77251 48.249 2.77251C49.3825 2.77251 53.984 2.91951 54.734 2.72351C55.6155 2.49501 55.746 1.23051 54.979 0.758005C54.5385 0.488505 49.497 0.611005 48.607 0.611005C47.955 0.611005 45.899 0.529505 45.426 0.644005Z" />
                                        <path fillRule="evenodd" clipRule="evenodd" d="M45.279 4.66552C44.3325 5.06552 44.406 6.28102 45.2135 6.64002C45.6705 6.85152 54.571 6.77052 54.857 6.64802C55.656 6.30502 55.746 5.07352 54.922 4.69002C54.4075 4.45402 45.5315 4.55952 45.279 4.66552Z" />
                                        <path fillRule="evenodd" clipRule="evenodd" d="M20.364 51.061L40.547 51.086L40.5385 52.7585L20.364 52.766V51.061ZM20.29 52.799L40.604 52.8315L40.6125 51.012L20.315 51.004L20.29 52.799Z" />
                                    </svg>
                                    <span className={`${CustomClass({ component, version, customClass: "span-icon" })} ${CustomClass({ component, version, customClass: "span-icon-4" })}`}>Prendas</span>
                                </Link>
                                <Link className={`${CustomClass({ component, version, customClass: "nav-link" })} ${CustomClass({ component, version, customClass: "nav-link-5" })}`} to="/my-clothes">
                                    <svg width="64" height="64" viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg">
                                        <g clipPath="url(#clip0_63_39)">
                                            <path d="M24.3616 59.6963C24.5995 59.6977 24.8354 59.6478 25.0556 59.5493C25.2758 59.4509 25.476 59.3059 25.6447 59.1228H25.6417C25.9801 58.7517 26.1701 58.2494 26.1701 57.7258C26.1701 57.2021 25.9801 56.6998 25.6417 56.3288L25.6447 56.3255C25.3093 55.9628 24.8579 55.7565 24.3859 55.75H24.3385C23.8663 55.7556 23.4148 55.9621 23.0797 56.3255V56.3288C22.9115 56.5121 22.7781 56.7299 22.687 56.9696C22.596 57.2093 22.5491 57.4663 22.5491 57.7258C22.5491 57.9853 22.596 58.2423 22.687 58.482C22.7781 58.7217 22.9115 58.9394 23.0797 59.1228C23.2482 59.3059 23.4482 59.4509 23.6682 59.5493C23.8882 59.6477 24.1239 59.6977 24.3616 59.6963ZM20.4018 28.7515H57.7024L59.8277 20.1806H18.2765L18.4429 20.8509V20.8575L20.4018 28.7515ZM56.6367 33.0539H21.4663L23.5916 41.6242H54.5096V41.6109L56.6367 33.0539ZM61.1339 31.3539C61.1196 31.4288 61.1008 31.5026 61.0774 31.5747L58.3175 42.7202C58.1202 43.5158 57.771 44.2935 57.2324 44.8836C56.9357 45.2183 56.5797 45.4834 56.1859 45.6626C55.7922 45.8419 55.3691 45.9314 54.9425 45.9259H17.4155C17.0843 45.9251 16.7562 45.9958 16.45 46.1338C16.1439 46.2718 15.8657 46.4745 15.6314 46.7301L15.6235 46.7381C15.3893 46.9943 15.2036 47.2985 15.0772 47.6332C14.9508 47.9679 14.8862 48.3265 14.8869 48.6885C14.8876 49.0506 14.9538 49.4089 15.0815 49.7429C15.2093 50.077 15.3961 50.3803 15.6314 50.6354V50.64V50.6433C15.8656 50.8993 16.1437 51.1022 16.4499 51.2406C16.756 51.3789 17.0841 51.4499 17.4155 51.4496H54.3875C54.649 51.4445 54.9087 51.4965 55.1517 51.6022C55.3946 51.708 55.6157 51.8656 55.8023 52.0657C55.9888 52.2659 56.137 52.5045 56.2381 52.7679C56.3393 53.0312 56.3913 53.3139 56.3913 53.5994C56.3913 53.885 56.3393 54.1677 56.2381 54.431C56.137 54.6943 55.9888 54.933 55.8023 55.1331C55.6157 55.3333 55.3946 55.4908 55.1517 55.5966C54.9087 55.7024 54.649 55.7543 54.3875 55.7493H51.3695C51.5623 56.387 51.6609 57.0542 51.6616 57.7258C51.6621 58.5502 51.5134 59.3666 51.2242 60.1282C50.9349 60.8897 50.5107 61.5814 49.976 62.1634H49.9681C49.4359 62.7466 48.8036 63.2094 48.1073 63.5251C47.411 63.8409 46.6645 64.0034 45.9105 64.0034C45.1566 64.0034 44.41 63.8409 43.7137 63.5251C43.0174 63.2094 42.3851 62.7466 41.853 62.1634H41.8451C41.0917 61.34 40.5625 60.3043 40.3165 59.1718C40.0706 58.0393 40.1175 56.8544 40.4521 55.7493H29.8255C30.0162 56.3874 30.1128 57.0546 30.1115 57.7258C30.1121 58.5501 29.9636 59.3665 29.6745 60.128C29.3855 60.8895 28.9615 61.5812 28.427 62.1634H28.4173C27.8853 62.7466 27.2531 63.2093 26.5569 63.525C25.8607 63.8408 25.1143 64.0033 24.3604 64.0033C23.6065 64.0033 22.8601 63.8408 22.1639 63.525C21.4677 63.2093 20.8355 62.7466 20.3035 62.1634H20.2962C19.5421 61.3404 19.0123 60.3049 18.7657 59.1724C18.519 58.0398 18.5654 56.8548 18.8996 55.7493H17.4118C16.563 55.7482 15.7227 55.5643 14.9391 55.2079C14.1555 54.8516 13.444 54.3299 12.8454 53.6727L12.8406 53.678C12.2388 53.0245 11.7612 52.2475 11.4354 51.3918C11.1095 50.5361 10.9418 49.6185 10.9418 48.6917C10.9418 47.765 11.1095 46.8473 11.4354 45.9916C11.7612 45.1359 12.2388 44.359 12.8406 43.7054L12.8454 43.7008H12.8503V43.6975C13.4485 43.0421 14.1592 42.522 14.9417 42.1668C15.7242 41.8116 16.5632 41.6284 17.4106 41.6275H19.5129L17.0232 31.5753C17.001 31.5049 16.9826 31.4332 16.9679 31.3605L14.6404 21.9614V21.9581L13.8036 18.5813V18.5774L10.7523 6.27489C10.261 4.28581 9.88881 4.28581 8.0331 4.29443H7.49874V4.30437H1.97291C1.45015 4.30437 0.948797 4.07763 0.579148 3.67401C0.209498 3.2704 0.00183105 2.72298 0.00183105 2.15219C0.00183105 1.58139 0.209498 1.03397 0.579148 0.630361C0.948797 0.226748 1.45015 0 1.97291 0H7.49874V0.00928335H8.0331C12.4009 -0.00397719 13.2754 -0.00663017 14.553 5.16365L17.2096 15.8762H60.5242C60.8341 15.8769 61.1424 15.9229 61.4411 16.0128C62.0726 16.1995 62.6475 16.5655 63.1074 17.0736C63.6539 17.6829 64 18.4772 64 19.3756C63.9985 19.6507 63.9644 19.9243 63.8986 20.1898L61.1339 31.3539ZM45.9057 59.6963C46.1436 59.6977 46.3794 59.6478 46.5996 59.5493C46.8198 59.4509 47.02 59.3059 47.1887 59.1228H47.1857C47.5244 58.7519 47.7146 58.2495 47.7146 57.7258C47.7146 57.202 47.5244 56.6997 47.1857 56.3288L47.1887 56.3255C46.8534 55.9629 46.4024 55.7566 45.9306 55.75H45.8826C45.41 55.7556 44.9581 55.9621 44.6226 56.3255L44.6274 56.3288C44.4594 56.5122 44.326 56.73 44.2351 56.9697C44.1441 57.2094 44.0973 57.4663 44.0973 57.7258C44.0973 57.9852 44.1441 58.2422 44.2351 58.4819C44.326 58.7216 44.4594 58.9393 44.6274 59.1228H44.6226C44.7914 59.3057 44.9917 59.4506 45.2118 59.549C45.432 59.6474 45.6678 59.6974 45.9057 59.6963Z" />
                                        </g>
                                        <defs>
                                            <clipPath id="clip0_63_39">
                                                <rect width="64" height="64" fill="white" />
                                            </clipPath>
                                        </defs>
                                    </svg>
                                    <span className={`${CustomClass({ component, version, customClass: "span-icon" })} ${CustomClass({ component, version, customClass: "span-icon-5" })}`}>Mis prendas</span>
                                </Link>
                                {administrador && <Link className={`${CustomClass({ component, version, customClass: "nav-link" })} ${CustomClass({ component, version, customClass: "nav-link-6" })}`} to="/dashboard">
                                    <svg width="58" height="64" viewBox="0 0 58 64" xmlns="http://www.w3.org/2000/svg">
                                        <path fillRule="evenodd" clipRule="evenodd" d="M0.876526 7.0135V48.958C0.876526 52.2895 3.95803 55.176 8.05703 55.176H23.852C24.879 55.176 25.7585 54.584 25.7585 53.585C25.7585 51.5395 22.8805 51.993 20.8175 51.993H7.57553C5.65103 51.9835 4.06953 50.6605 4.06953 48.8005V7.3285C4.06953 5.376 5.95653 4.136 7.89953 4.136H39.795C42.257 4.136 43.645 5.5425 43.6265 8.1235V27.75C43.6075 30.1835 44.1815 30.2945 45.699 30.2945C46.2075 30.2945 46.818 29.4895 46.818 28.86V7.1705C46.818 5.1445 45.7175 3.664 44.385 2.4245C43.1175 1.2305 41.2485 0.786499 38.842 0.786499H8.85253C6.09553 0.786499 4.24503 1.3415 2.73703 2.9605C2.61603 3.0905 2.62553 3.0905 2.50603 3.2105C2.20003 3.5525 1.99603 3.775 1.73703 4.2005C1.33903 4.867 0.876526 6.0235 0.876526 7.0135Z" />
                                        <path fillRule="evenodd" clipRule="evenodd" d="M38.685 58.053H45.384C45.3095 61.043 40.665 62.1065 39.1015 59.2285C38.833 58.729 38.8885 58.4885 38.685 58.053ZM53.36 54.7035H30.709C30.949 51.7895 31.3465 51.512 31.3465 47.524C31.3465 42.8415 32.5595 39.316 36.224 36.772C41.0445 33.4225 46.06 34.4395 49.8075 38.474C51.1115 39.871 52.0005 41.703 52.4905 43.6095C52.8145 44.8775 52.694 45.895 52.7125 47.3665L52.9435 51.123C53.0275 51.678 53.0455 52.2985 53.129 52.8535C53.212 53.4455 53.3415 54.214 53.36 54.7035ZM27.1925 56.2955V57.5725H35.1685C35.1685 59.5255 36.1865 60.746 37.204 61.764C37.778 62.338 38.2965 62.699 39.1105 63.041C43.598 64.9475 47.919 61.6065 48.253 57.5725L55.4325 57.582C56.5065 57.4425 55.544 57.119 57.0245 56.777C57.0245 55.861 56.5525 53.825 56.3585 52.4925C56.1545 51.096 56.1455 49.1985 55.951 47.802C55.6185 45.34 56.2385 42.777 54.249 39.455C52.935 37.2525 51.574 35.5685 49.5015 34.153C44.5235 30.757 39.564 30.84 34.6595 34.097C34.0855 34.477 33.7905 34.6345 33.2995 35.1245C29.8115 38.595 28.1555 41.361 28.1555 47.3665C28.1555 49.0875 28.1365 50.5125 27.9045 52.058L27.1925 56.2955Z" />
                                        <path fillRule="evenodd" clipRule="evenodd" d="M13.322 18.654H34.2155C36.4085 18.654 36.0385 15.4615 34.5305 15.4615H13.322C11.2775 15.4615 11.3695 18.654 13.322 18.654Z" />
                                        <path fillRule="evenodd" clipRule="evenodd" d="M12.0455 26.306C12.0455 27.2595 12.6285 27.907 13.479 27.907H34.5305C36.3805 27.907 36.7045 24.7145 34.0585 24.7145H13.961C12.9335 24.7145 12.0455 25.3165 12.0455 26.306Z" />
                                        <path fillRule="evenodd" clipRule="evenodd" d="M13.637 37.16H24.167C26.2485 37.16 26.2855 33.9685 24.324 33.9685H13.322C11.3975 33.9685 11.101 37.16 13.637 37.16Z" />
                                    </svg>
                                    <span className={`${CustomClass({ component, version, customClass: "span-icon" })} ${CustomClass({ component, version, customClass: "span-icon-6" })}`}>Informe</span>
                                </Link>}
                            </nav>
                        </div>
                    </div>
                    <div className={`${CustomClass({ component, version, customClass: "right-navigation-container" })}`}>
                        <div className={`${CustomClass({ component, version, customClass: "profile-link-box" })}`}>
                            <button className={`${CustomClass({ component, version, customClass: "nav-link-profile" })} ${CustomClass({ component, version, customClass: "nav-link-7" })}`} type="button" onClick={() => setShowProfile(true)}>

                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M15.5925 3.02719C14.6803 2.04234 13.4063 1.5 12 1.5C10.5863 1.5 9.30799 2.03906 8.40002 3.01781C7.48221 4.00734 7.03502 5.35219 7.14002 6.80437C7.34815 9.66937 9.52831 12 12 12C14.4717 12 16.6481 9.66984 16.8596 6.80531C16.966 5.36625 16.516 4.02422 15.5925 3.02719ZM20.25 22.5H3.75002C3.53405 22.5028 3.32017 22.4574 3.12394 22.3672C2.92772 22.2769 2.75407 22.1441 2.61565 21.9783C2.31096 21.6141 2.18815 21.1167 2.27909 20.6137C2.67471 18.4191 3.9094 16.5755 5.85002 15.2812C7.57409 14.1323 9.75799 13.5 12 13.5C14.2421 13.5 16.426 14.1328 18.15 15.2812C20.0906 16.575 21.3253 18.4186 21.721 20.6133C21.8119 21.1162 21.6891 21.6136 21.3844 21.9778C21.246 22.1437 21.0724 22.2766 20.8762 22.367C20.6799 22.4573 20.466 22.5028 20.25 22.5Z" fill="#EF0F0F" />
                                </svg>
                                <span className={`${CustomClass({ component, version, customClass: "span-name" })} ${CustomClass({ component, version, customClass: "span-icon-7" })}`}>{userName}</span>

                            </button>

                            <button onClick={() => hanldeHref()} className={`${CustomClass({ component, version, customClass: "login-form-help" })}`}><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M12 3C7.03125 3 3 7.03125 3 12C3 16.9688 7.03125 21 12 21C16.9688 21 21 16.9688 21 12C21 7.03125 16.9688 3 12 3ZM11.7188 17.25C11.5333 17.25 11.3521 17.195 11.1979 17.092C11.0437 16.989 10.9236 16.8426 10.8526 16.6713C10.7817 16.5 10.7631 16.3115 10.7993 16.1296C10.8354 15.9477 10.9247 15.7807 11.0558 15.6496C11.1869 15.5185 11.354 15.4292 11.5359 15.393C11.7177 15.3568 11.9062 15.3754 12.0775 15.4464C12.2488 15.5173 12.3952 15.6375 12.4983 15.7917C12.6013 15.9458 12.6562 16.1271 12.6562 16.3125C12.6562 16.5611 12.5575 16.7996 12.3817 16.9754C12.2058 17.1512 11.9674 17.25 11.7188 17.25ZM13.2863 12.4688C12.5264 12.9788 12.4219 13.4461 12.4219 13.875C12.4219 14.049 12.3527 14.216 12.2297 14.339C12.1066 14.4621 11.9397 14.5312 11.7656 14.5312C11.5916 14.5312 11.4247 14.4621 11.3016 14.339C11.1785 14.216 11.1094 14.049 11.1094 13.875C11.1094 12.848 11.5819 12.0314 12.5541 11.3784C13.4578 10.7719 13.9688 10.3875 13.9688 9.54234C13.9688 8.96766 13.6406 8.53125 12.9614 8.20828C12.8016 8.13234 12.4458 8.05828 12.008 8.06344C11.4586 8.07047 11.032 8.20172 10.7034 8.46609C10.0837 8.96484 10.0312 9.50766 10.0312 9.51562C10.0271 9.6018 10.006 9.68632 9.96919 9.76435C9.93237 9.84238 9.88054 9.9124 9.81667 9.9704C9.75279 10.0284 9.67811 10.0732 9.5969 10.1024C9.51569 10.1315 9.42954 10.1444 9.34336 10.1402C9.25718 10.1361 9.17266 10.115 9.09463 10.0782C9.0166 10.0414 8.94659 9.98953 8.88859 9.92565C8.83059 9.86177 8.78574 9.7871 8.7566 9.70589C8.72745 9.62468 8.71459 9.53852 8.71875 9.45234C8.72391 9.33844 8.80313 8.31234 9.87984 7.44609C10.4381 6.99703 11.1483 6.76359 11.9892 6.75328C12.5845 6.74625 13.1437 6.84703 13.523 7.02609C14.6578 7.56281 15.2812 8.45766 15.2812 9.54234C15.2812 11.1281 14.2214 11.8402 13.2863 12.4688Z" fill="#E31A2A" />
                            </svg>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            {
                showProfile && <MyProfile setShowProfile={setShowProfile} />
            }
            {/* <SelectIdentity /> */}
        </header>
    );
};

export default Header;
